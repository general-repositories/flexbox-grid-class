*
{
    margin: 0;
    padding: 0;
}

.grid-container
{
    display: grid;

    /* Hm Kind of similar to bootstrap. But so much stronkier */
    grid-template-columns: repeat(12, 1fr);

    /* Just for simplicities sake */
    grid-template-rows: repeat(12, 1fr);

    /* What on earth is going on here?? Whole bunch of hecking words */

    /* Here we are going to name areas on the grid. It's really quite simplistic when you say it like that */
    /* So a . represents 'nothing'. 0. Nada */
    /* Any one word can be used multiple times, but cannot be used to build areas that are not square or rectangular. Nor can they be separated across the grid. */
    /* In this fashion we can layout exactly how we want our page to look. Now we can simply use grid-area:x to denote it's area on the grid. Just wait till you see the next part tho. */
    grid-template-areas:
    ". header header header header header header header header header header ."
    ". header header header header header header header header header header ."
    ". . . . . . . . . . . ."
    /* ". . content content content content content content content content . ." */
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". . content content content content content content content content . ."
    ". footer footer footer footer footer footer footer footer footer footer ."
    ". footer footer footer footer footer footer footer footer footer footer ."
    ;

    gap: 5px;

    height: 100vh;
    background-color: #5555;
}
/* Whaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat */
@media only screen and (max-width: 500px)
{
    .grid-container
    {
        /* That's right we can media query the whole god damn grid. We can just completely reorganize our page on the grid without breaking anything. Boom. Done. Just like that */

        /* Here we're expanding content for a phone size width so that it isn't too tiny when you're on your phone. This is just a small example, a tip of the iceberg if you will, of what you can do with CSS GrId. |_|_| */
        grid-template-areas:
        ". header header header header header header header header header header ."
        ". header header header header header header header header header header ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". content content content content content content content content content content ."
        ". footer footer footer footer footer footer footer footer footer footer ."
        ". footer footer footer footer footer footer footer footer footer footer ."
        ;
    }
}

/* ****************************************************************************************** */
/* Nav Bar */
/* header cell */
header
{
    /* This is all we have to do to place our header into the area defined as header. We just apply grid-area:header and voila, it exactly fills the space defined in our template */
    grid-area: header;
    /* ************************************ */

    /* Flex Properties */
    display: flex;
    justify-content: space-around;
    align-items: center;

    /* Styles */
    border-radius: .5rem;
    background-color: blue;
}
header li
{
    display: inline-block;

    margin: 10px;
}
/* End Nav Bar */
/* ****************************************************************************************** */

/* ****************************************************************************************** */
/* Content Cell and Styles */
.content
{
    grid-area: content;

    display: flex;
    flex-wrap: wrap;

    border-radius: .5rem;
    background-color: #5555;
    overflow: hidden;
}
.content p
{   
    flex: 1 1 200px;

    /* Styles */
    font-size: 1vw;
    margin: 10px;
}
/* End Content */
/* ****************************************************************************************** */

/* ****************************************************************************************** */
/* Footer */
footer
{
    grid-area: footer;

    display: flex;
    justify-content: space-around;
    align-items: center;

    /* Styles */
    border-radius: .5rem;
    background-color: blueviolet;
}
/* End Footer */
/* ****************************************************************************************** */